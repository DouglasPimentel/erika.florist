diff --git a/dist/content/vite-plugin-content-imports.js b/dist/content/vite-plugin-content-imports.js
index 89029889cb9a26dd7d6646d9a625beb7c32406e7..6b4fba996ffb95920ad0dce8706aca8ae587307f 100644
--- a/dist/content/vite-plugin-content-imports.js
+++ b/dist/content/vite-plugin-content-imports.js
@@ -6,19 +6,20 @@ import { AstroError } from "../core/errors/errors.js";
 import { escapeViteEnvReferences, getFileInfo } from "../vite-plugin-utils/index.js";
 import { CONTENT_FLAG, DATA_FLAG } from "./consts.js";
 import {
-  getContentEntryConfigByExtMap,
-  getContentEntryExts,
-  getContentEntryIdAndSlug,
-  getContentPaths,
-  getDataEntryExts,
-  getDataEntryId,
-  getEntryCollectionName,
-  getEntryData,
-  getEntryType,
-  globalContentConfigObserver,
-  hasContentFlag,
-  parseEntrySlug,
-  reloadContentConfigObserver
+	getContentEntryConfigByExtMap,
+	getContentEntryExts,
+	getContentEntryIdAndSlug,
+	getContentPaths,
+	getDataEntryExts,
+	getDataEntryId,
+	getEntryCollectionName,
+	getEntryData,
+	getEntryType,
+	globalContentConfigObserver,
+	hasContentFlag,
+	hasUnderscoreBelowContentDirectoryPath,
+	parseEntrySlug,
+	reloadContentConfigObserver
 } from "./utils.js";
 function getContentRendererByViteId(viteId, settings) {
   let ext = viteId.split(".").pop();
@@ -51,7 +52,8 @@ function astroContentImportPlugin({
     {
       name: "astro:content-imports",
       async transform(_, viteId) {
-        if (hasContentFlag(viteId, DATA_FLAG)) {
+				if (hasContentFlag(viteId, DATA_FLAG)) {
+					if (contentPaths.contentDir && hasUnderscoreBelowContentDirectoryPath(new URL(viteId, 'file:'), contentPaths.contentDir)) return null;
           const fileId = viteId.split("?")[0] ?? viteId;
           const { id, data, collection, _internal } = await getDataEntryModule({
             fileId,
@@ -299,5 +301,5 @@ async function getDataEntryModule({
   return { id, collection, data, _internal };
 }
 export {
-  astroContentImportPlugin
+	astroContentImportPlugin
 };
