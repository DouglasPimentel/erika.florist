---
import { postProcessCatalogueItem, CatalogueItem } from "$data/catalogue"
import type { MarkdownInstance } from "$data/shared"

let catalogueItems = await Astro.glob<CatalogueItem>("/content/catalogue/**/*.md")
catalogueItems = await Promise.all(
  catalogueItems.map(async (item) => {
    item.frontmatter = await postProcessCatalogueItem(item.frontmatter, item.file)
    return item
  }),
)

const json = JSON.stringify(
  catalogueItems
    .sort((a, b) => {
      return (
        (b.frontmatter.ended_on ?? b.frontmatter.started_on).getTime() -
        (a.frontmatter.ended_on ?? a.frontmatter.started_on).getTime()
      )
    })
    .map((item: MarkdownInstance<CatalogueItem>) => {
      return {
        title: item.frontmatter.title,
        cover: item.frontmatter.cover,
        creator:
          (item.frontmatter.author || item.frontmatter.developer || item.frontmatter.studio) ??
          "Unknown",
        url: item.url,
        type: item.frontmatter.type,
      }
    }),
)
---

<body set:html={json}></body>
