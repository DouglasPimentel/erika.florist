---
import { postProcessCatalogueItem, CatalogueItem, CatalogueType } from "$data/catalogue"
import type { MarkdownInstance } from "$data/shared"

const rawCatalogueItems = await Astro.glob<CatalogueItem>("/content/catalogue/**/*.md")
const catalogueItems = await Promise.all(
  rawCatalogueItems.map(async (item) => ({
    ...item,
    frontmatter: await postProcessCatalogueItem(item.frontmatter, item.file),
  })),
)

const json = JSON.stringify(
  catalogueItems
    .sort((a, b) => {
      return (
        (b.frontmatter.ended_on ?? b.frontmatter.started_on).getTime() -
        (a.frontmatter.ended_on ?? a.frontmatter.started_on).getTime()
      )
    })
    .map((item: MarkdownInstance<CatalogueItem>) => {
      const creator =
        (item.frontmatter.type == CatalogueType.GAME
          ? item.frontmatter.developer
          : item.frontmatter.type == CatalogueType.BOOK
          ? item.frontmatter.author
          : item.frontmatter.type == CatalogueType.MOVIE ||
            item.frontmatter.type == CatalogueType.SHOW
          ? item.frontmatter.studio
          : undefined) ?? "Unknown"

      return {
        title: item.frontmatter.title,
        cover: item.frontmatter.cover,
        creator,
        url: item.frontmatter.url,
        type: item.frontmatter.type,
      }
    }),
)
---

<body set:html={json}></body>
