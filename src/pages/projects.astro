---
import BaseLayout from "$layouts/BaseLayout.astro"
import { postProcessProject, Project, ProjectType } from "$data/projects"

let projects = await Astro.fetchContent("/content/projects/**/*.md")
projects = projects.map((project) => postProcessProject(project))

// Create an object with sub-objects corresponding to the different types of projects that exist
// The cool part about this: it's 100% automated based on types and content, we'll practically never have to touch this
type ProjectList = {
  [projectType in ProjectType]?: Project[]
}

const projectsPerType: ProjectList = {}
Object.values(ProjectType).forEach((projectType) => {
  projectsPerType[projectType] = projects.filter((project) => project.type === projectType)
})

// Utils
const readableTitles = {
  game: "Games",
  website: "Websites",
  software: "Softwares and libraries",
}
---

<BaseLayout title="Projects">
  <article class="w-index mx-auto mt-4 sm:mt-6">
    <h2>Projects</h2>

    <p>
      A list of my projects, it isn't necessarily exhaustive and mostly contain the projects I'm the
      most proud of.
    </p>
    <p>
      Additionally, projects marked with a star (ðŸŒŸ) are featured projects I'm even more proud of!
      Projects marked with a chain (ðŸ”—) will be opened on another website (for instance, their
      GitHub repo)
    </p>

    To see more projects, feel free to visit my <a href="https://github.com/Princesseuh">GitHub</a> or
    for games especially, my <a href="https://princesseuh.itch.io/">Itch.io</a>

    {Object.entries(projectsPerType)
      .filter((type) => type[1].length > 0)
      .map((type) => (
        <div>
          <h3>{readableTitles[type[0]]}</h3>
          <div class="flex gap-4">
            {type[1].map((project) => (
              <a
                href={project.external_url ? project.external_url : project.url.pathname}
                class={project.featured ? "project-box project-featured" : "project-box"}
              >
                {project.featured && (
                  <span
                    class="absolute right-2 top-1 w-5 h-5 fill-current"
                    title="Featured project"
                  >
                    ðŸŒŸ
                  </span>
                )}
                {project.external_url && (
                  <span
                    class="absolute right-2 top-1 w-5 h-5 fill-current"
                    title="Project is hosted on an external website"
                  >
                    ðŸ”—
                  </span>
                )}
                <Fragment set:html={project.assets.miniLogo} />
                <div>
                  <h4 class="block font-bold m-0">{project.title}</h4>
                  <span class="text-sm text-creative-work">{project.description}</span>
                </div>
              </a>
            ))}
          </div>
        </div>
      ))}
  </article>
</BaseLayout>
