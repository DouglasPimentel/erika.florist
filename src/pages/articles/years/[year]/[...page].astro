---
import { Article, postProcessArticle } from "$data/articles"
import type { GetStaticPaths, MarkdownInstance, Page } from "$data/shared"
import ArticleListLayout from "$layouts/ArticleListLayout.astro"

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  let articles = await Astro.glob<Article>("/content/articles/**/*.md")
  articles = articles
    .map((article) => ({
      ...article,
      frontmatter: postProcessArticle(article.frontmatter, article.file),
    }))
    .sort((a, b) => {
      return b.frontmatter.date.getTime() - a.frontmatter.date.getTime()
    })

  const years = articles.map((article) => article.frontmatter.date.getUTCFullYear())
  const uniqueYears = [...new Set(years)]

  return uniqueYears.flatMap((year) => {
    const filteredArticles = articles.filter(
      (article) => article.frontmatter.date.getUTCFullYear() === year,
    )
    return paginate(filteredArticles, { params: { year: year.toString() } })
  })
}

export interface Props {
  page: Page<MarkdownInstance<Article>>
}

const { page } = Astro.props
const { year } = Astro.params
---

<ArticleListLayout page={page} title={"Articles from " + year} />
