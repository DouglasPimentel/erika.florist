---
import { parseHTML } from "linkedom";

import { imageMetadata } from "astro/assets/utils";

// @ts-expect-error Eleventy please
import EleventyFetch from "@11ty/eleventy-fetch";

interface Props {
	href: string;
}

const { href } = Astro.props;

let faviconUrl: string | undefined;

if (href.startsWith("http")) {
	faviconUrl = undefined;

	// Get favicon
	let html = "";

	try {
		html = await EleventyFetch(href, {
			duration: "1y",
			type: "text",
			directory: "node_modules/.cache",
		});
		const { document } = parseHTML(html);
		const links = document.querySelectorAll("link");

		const faviconElement = Array.from(links).find((link) => {
			const rel = (link.getAttribute("rel") || "").toLowerCase();

			if (["icon", "shortcut icon"].includes(rel)) {
				const iconHref = link.getAttribute("href");

				if (iconHref) {
					return true;
				}
			}

			return false;
		});

		let originalFaviconUrl = new URL("/favicon.ico", href);
		if (faviconElement) {
			originalFaviconUrl = new URL(faviconElement.getAttribute("href")!, href);
		}

		const faviconBuffer = await EleventyFetch(originalFaviconUrl.toString(), {
			duration: "1y",
			type: "buffer",
			directory: "node_modules/.cache",
		});

		const faviconMetadata = await imageMetadata(faviconBuffer);
		const mimeType =
			(faviconMetadata.format as any) === "ico"
				? "image/x-icon"
				: faviconMetadata.format === "svg"
				  ? "image/svg+xml"
				  : `image/${faviconMetadata.format}`;

		if (originalFaviconUrl) {
			faviconUrl = `data:${mimeType};base64,${faviconBuffer.toString("base64")}`;
		}
	} catch (e) {
		if (e instanceof Error && e.hasOwnProperty("message")) {
			if (import.meta.env.DEV) console.log(e.message);
		}
	}
}

const content = (await Astro.slots.render("default")).trim();
---

{
	faviconUrl ? (
		<img
			class="relative top-[3px] w-4 rounded-sm"
			src={faviconUrl.toString()}
			alt="Favicon"
			data-favicon
		/>
	) : (
		<span class="relative top-[3px] inline-block w-4 rounded-sm ">
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
				<path
					fill="none"
					stroke="currentColor"
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M12 6H6a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-6m-7 1 9-9m-5 0h5v5"
				/>
			</svg>
		</span>
	)
}

<a href={href} class="ml-1">{content}</a>
