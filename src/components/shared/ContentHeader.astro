---
import { readableDate } from "$utils"
import type { Article } from "$data/articles"
import type { WikiItem } from "$data/wiki"

export interface Props {
  item: Article | WikiItem
  includeTags: boolean
}

const isArticle = (item: Article | WikiItem): item is Article => {
  return (item as Article).date !== undefined || (item as Article).tags !== undefined
}

const { item, includeTags } = Astro.props as Props
---

<header class="mb-4 mt-4">
  <h1 class="text-4xl sm:text-[3.5rem] mb-4 mt-0 leading-none">{item.title}</h1>
  {item.tagline && <h2 class="relative top-[-5px] m-0 text-xl">{item.tagline}</h2>}
  {isArticle(item) && includeTags && (
    <div class="text-creative-work">
      {readableDate(item.date)} Â·{" "}
      {item.tags
        .map((tag) => <a href={"/articles/tags/" + tag + "/"}>{tag}</a>)
        .reduce((prev: string, curr: string) => (prev === null ? [curr] : [prev, ", ", curr]))}
    </div>
  )}
</header>
