---
import { headerMenu as globalMenu } from "$data/headerMenu";
import type { MDXInstance, WikiItemInstance } from "$data/shared";
import { getWikiItemsByCategory, postProcessWikiItem, WikiItem } from "$data/wiki";
import { wikiCategories, WikiCategory } from "$data/wikiCategories";
import Socials from "./Socials.astro";

let rawWikiItems: MDXInstance<WikiItem>[] = [];
let wikiItems: MDXInstance<WikiItem>[] = [];

const url = new URL(Astro.request.url);
const isWikiPage = url.pathname.startsWith("/wiki");

if (isWikiPage) {
  rawWikiItems = await Astro.glob<WikiItem>("/content/wiki/**/*.mdx");
  wikiItems = rawWikiItems.map((item) => ({
    ...item,
    frontmatter: postProcessWikiItem(item.frontmatter, item.file),
  }));
}
---

<div
  inert
  id="mobile-menu"
  class="fixed top-16 w-0 h-[calc(100%-4rem)] bg-baltic-sea overflow-y-auto overflow-x-hidden whitespace-nowrap"
>
  <nav class="p-3 flex flex-col gap-4" aria-label="Mobile menu">
    {/* Global header menu */}
    {
      globalMenu.map((item) => (
        <a class="header-link bg-fin-lanka mr-0 p-3 text-xl" href={`/${item.toLowerCase()}/`}>
          {item}
        </a>
      ))
    }
  </nav>

  {/* Wiki-exclusive menu */}
  {
    isWikiPage && (
      <nav class="flex flex-col gap-3 p-3">
        {wikiCategories.map((category: WikiCategory) => (
          <>
            <span class="text-sugar-cane block font-bold">{category.title}</span>
            {getWikiItemsByCategory(wikiItems, category.key).map((item: WikiItemInstance) => (
              <a
                class="header-link bg-fin-lanka mr-0 p-2 text-lg"
                href={item.frontmatter.url.pathname}
              >
                {item.frontmatter.navigation.label || item.frontmatter.title}
              </a>
            ))}
          </>
        ))}
      </nav>
    )
  }

  <Socials classes="mt-4 justify-center gap-7 mb-8" size={45} />
</div>
