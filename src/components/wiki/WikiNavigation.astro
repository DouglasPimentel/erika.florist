---
import type { WikiItemInstance } from "$data/shared"
import { getWikiItemsByCategory, postProcessWikiItem, WikiItem } from "$data/wiki"
import { wikiCategories, WikiCategory } from "$data/wikiCategories"

const rawWikiItems = await Astro.glob<WikiItem>("/content/wiki/**/*.mdx")
const wikiItems = rawWikiItems.map((item) => ({
  ...item,
  frontmatter: postProcessWikiItem(item.frontmatter, item.file),
}))

const url = new URL(Astro.request.url)
---

<ul class="m-0 list-none p-0 wiki-navigation hidden sm:block">
  {
    wikiCategories.map((category: WikiCategory) => (
      <li>
        <span class="text-sugar-cane block font-bold">{category.title}</span>
        {getWikiItemsByCategory(wikiItems, category.key).map((item: WikiItemInstance) => (
          <a
            class={`block ${
              url.pathname == item.frontmatter.url.pathname ? "text-pinky-unicorny font-bold" : ""
            }`}
            href={item.frontmatter.url.pathname}
          >
            {item.frontmatter.navigation.label || item.frontmatter.title}
          </a>
        ))}
      </li>
    ))
  }
</ul>
