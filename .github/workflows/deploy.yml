name: Vercel Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  FORCE_COLOR: true
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[auto]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust target
        run: |
          sudo apt install musl-tools
          rustup target add x86_64-unknown-linux-musl

      - name: Setup PNPM
        uses: pnpm/action-setup@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Restore cached Images
        id: cache-images-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules/.astro
          key: ${{ runner.os }}-images

      - name: Pull Vercel Environment Information
        run: pnpx vercel pull --environment production --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: pnpx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: pnpx vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: clear
        run: |
          gh extension install actions/gh-actions-cache
          if ${{ steps.cache-restore.outputs.cache-hit == 'true' }}; then
            gh actions-cache delete ${{ runner.os }}-images --confirm
          fi

      - name: Save build images
        id: cache-image-save
        uses: actions/cache/save@v3
        if: always()
        with:
          path: |
            node_modules/.astro
          key: ${{ steps.cache-images-restore.outputs.cache-primary-key }}
